CREATE TABLE TgUser(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tg_userid BIGINT UNIQUE,
    tg_username VARCHAR UNIQUE NOT NULL
);

CREATE TABLE Participant(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INT REFERENCES TgUser,
    display_name VARCHAR NOT NULL DEFAULT '',
    age INT NOT NULL DEFAULT 22 CHECK(age > 0)
);

CREATE TABLE ParticipantRels(
    leader_id INT NOT NULL REFERENCES Participant,
    follower_id INT NOT NULL REFERENCES Participant,
    UNIQUE(leader_id, follower_id)
);

CREATE TABLE Organizer(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR NOT NULL
);

CREATE TABLE EventSeries(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR NOT NULL DEFAULT '',
    organizer_id INT REFERENCES Organizer
);

CREATE TABLE Event(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR NOT NULL DEFAULT '',
    start TIMESTAMP NOT NULL,
    series_id INT REFERENCES EventSeries
);

CREATE TABLE EventSeriesSubscription(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    series_id INT NOT NULL REFERENCES EventSeries,
    participant_id INT NOT NULL REFERENCES Participant,
    default_property_values JSON NOT NULL DEFAULT '{}'::JSON,
    UNIQUE (series_id, participant_id)
);

CREATE TABLE EventRegistration(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    subscription_id INT REFERENCES EventSeriesSubscription,
    participant_id INT REFERENCES Participant NOT NULL,
    event_id INT REFERENCES Event NOT NULL,
    UNIQUE (event_id, participant_id)
);

CREATE VIEW EventView AS
SELECT E.id, E.title, E.start, T.*
FROM Event E LEFT JOIN (
    SELECT ES.id AS series_id, ES.title AS series_title, O.id AS organizer_id, O.title AS organizer_title
    FROM EventSeries ES JOIN Organizer O on ES.organizer_id = O.id
) AS T ON E.series_id = T.series_id;